--[[
    Roblox Blackhub Style UI (Movable)

    This script creates a UI inspired by the "Blackhub" design, featuring:
    - A main draggable window with rounded corners.
    - A title bar with window controls (placeholders).
    - A left-hand navigation sidebar.
    - A main content area with example sections (Change Log, Planting).

    This script is intended to be run via a Roblox exploit/executor.
]]

-- Services
local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")

-- Player
local LocalPlayer = Players.LocalPlayer

-- UI Dragging Variables
local dragging = false
local dragStartOffset = Vector2.new(0, 0) -- Offset from mouse to frame's top-left corner
local dragConnection = nil -- Stores the Heartbeat connection for the dragging loop

-- UI Creation Function
local function createBlackhubUI()
    local ScreenGui = Instance.new("ScreenGui")
    ScreenGui.Name = "BlackhubStyleUI"
    ScreenGui.Parent = LocalPlayer:WaitForChild("PlayerGui")
    ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
    ScreenGui.ResetOnSpawn = false -- Keep UI after character respawns

    -- Main Frame (the entire window)
    local MainFrame = Instance.new("Frame")
    MainFrame.Name = "MainFrame"
    MainFrame.Parent = ScreenGui
    MainFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30) -- Dark background
    MainFrame.BorderSizePixel = 0
    MainFrame.Position = UDim2.new(0.5, -350, 0.5, -250) -- Centered, larger size
    MainFrame.Size = UDim2.new(0, 700, 0, 500)
    MainFrame.Active = true -- Crucial for dragging
    MainFrame.ZIndex = 10

    -- Add UICorner for rounded edges to MainFrame
    local UICornerMain = Instance.new("UICorner")
    UICornerMain.Parent = MainFrame
    UICornerMain.CornerRadius = UDim.new(0, 10)

    -- Add UIStroke for a subtle border to MainFrame
    local UIStrokeMain = Instance.new("UIStroke")
    UIStrokeMain.Parent = MainFrame
    UIStrokeMain.Color = Color3.fromRGB(50, 50, 50)
    UIStrokeMain.Thickness = 2
    UIStrokeMain.Transparency = 0.6

    -- Title Bar
    local TitleBar = Instance.new("Frame")
    TitleBar.Name = "TitleBar"
    TitleBar.Parent = MainFrame
    TitleBar.BackgroundColor3 = Color3.fromRGB(40, 40, 40) -- Slightly lighter than main frame
    TitleBar.BorderSizePixel = 0
    TitleBar.Size = UDim2.new(1, 0, 0, 40) -- Full width, 40px height
    TitleBar.Position = UDim2.new(0, 0, 0, 0)
    TitleBar.Active = true -- Make title bar draggable

    -- Title Text Label
    local TitleLabel = Instance.new("TextLabel")
    TitleLabel.Name = "TitleLabel"
    TitleLabel.Parent = TitleBar
    TitleLabel.BackgroundTransparency = 1
    TitleLabel.Size = UDim2.new(1, -120, 1, 0) -- Leave space for window controls
    TitleLabel.Position = UDim2.new(0, 0, 0, 0)
    TitleLabel.Font = Enum.Font.GothamSemibold
    TitleLabel.Text = "GAG | Blackhub"
    TitleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    TitleLabel.TextSize = 18
    TitleLabel.TextXAlignment = Enum.TextXAlignment.Left
    TitleLabel.TextYAlignment = Enum.TextYAlignment.Center
    TitleLabel.TextWrapped = true
    TitleLabel.TextScaled = false
    TitleLabel.Active = true -- Make title label draggable
    TitleLabel.TextXAlignment = Enum.TextXAlignment.Left
    TitleLabel.TextOffset = Vector2.new(10, 0) -- Padding

    -- Window Control Buttons (Placeholders)
    local ButtonContainer = Instance.new("Frame")
    ButtonContainer.Name = "ButtonContainer"
    ButtonContainer.Parent = TitleBar
    ButtonContainer.BackgroundTransparency = 1
    ButtonContainer.Size = UDim2.new(0, 120, 1, 0)
    ButtonContainer.Position = UDim2.new(1, -120, 0, 0)
    
    local UIListLayoutButtons = Instance.new("UIListLayout")
    UIListLayoutButtons.Parent = ButtonContainer
    UIListLayoutButtons.FillDirection = Enum.FillDirection.Horizontal
    UIListLayoutButtons.HorizontalAlignment = Enum.HorizontalAlignment.Right
    UIListLayoutButtons.VerticalAlignment = Enum.VerticalAlignment.Center
    UIListLayoutButtons.Padding = UDim.new(0, 5)

    local function createWindowControlButton(name, text, color)
        local button = Instance.new("TextButton")
        button.Name = name
        button.Parent = ButtonContainer
        button.BackgroundColor3 = color
        button.BorderSizePixel = 0
        button.Size = UDim2.new(0, 30, 0, 30)
        button.Font = Enum.Font.GothamBold
        button.Text = text
        button.TextColor3 = Color3.fromRGB(255, 255, 255)
        button.TextSize = 18
        
        local UICornerButton = Instance.new("UICorner")
        UICornerButton.Parent = button
        UICornerButton.CornerRadius = UDim.new(0, 5)
        return button
    end

    local MinimizeButton = createWindowControlButton("MinimizeButton", "-", Color3.fromRGB(70, 70, 70))
    local MaximizeButton = createWindowControlButton("MaximizeButton", "â–¡", Color3.fromRGB(70, 70, 70))
    local CloseButton = createWindowControlButton("CloseButton", "X", Color3.fromRGB(200, 50, 50))
    CloseButton.MouseButton1Click:Connect(function() ScreenGui:Destroy() end)

    -- Main Content Area (holds sidebar and actual content)
    local MainContentArea = Instance.new("Frame")
    MainContentArea.Name = "MainContentArea"
    MainContentArea.Parent = MainFrame
    MainContentArea.BackgroundColor3 = Color3.fromRGB(30, 30, 30) -- Same as MainFrame
    MainContentArea.BorderSizePixel = 0
    MainContentArea.Position = UDim2.new(0, 0, 0, 40) -- Below title bar
    MainContentArea.Size = UDim2.new(1, 0, 1, -40) -- Fills remaining space

    local UIListLayoutMainContent = Instance.new("UIListLayout")
    UIListLayoutMainContent.Parent = MainContentArea
    UIListLayoutMainContent.FillDirection = Enum.FillDirection.Horizontal
    UIListLayoutMainContent.Padding = UDim.new(0, 0)
    UIListLayoutMainContent.HorizontalAlignment = Enum.HorizontalAlignment.Left
    UIListLayoutMainContent.VerticalAlignment = Enum.VerticalAlignment.Top

    -- Sidebar Frame
    local SidebarFrame = Instance.new("Frame")
    SidebarFrame.Name = "SidebarFrame"
    SidebarFrame.Parent = MainContentArea
    SidebarFrame.BackgroundColor3 = Color3.fromRGB(40, 40, 40) -- Darker than content area
    SidebarFrame.BorderSizePixel = 0
    SidebarFrame.Size = UDim2.new(0, 150, 1, 0) -- Fixed width sidebar
    
    local UIListLayoutSidebar = Instance.new("UIListLayout")
    UIListLayoutSidebar.Parent = SidebarFrame
    UIListLayoutSidebar.FillDirection = Enum.FillDirection.Vertical
    UIListLayoutSidebar.HorizontalAlignment = Enum.HorizontalAlignment.Left
    UIListLayoutSidebar.VerticalAlignment = Enum.VerticalAlignment.Top
    UIListLayoutSidebar.Padding = UDim.new(0, 5)
    UIListLayoutSidebar.SortOrder = Enum.SortOrder.LayoutOrder

    -- Sidebar Navigation Buttons
    local navItems = {
        {"Main", "Main", 1},
        {"Teleports", "Teleports", 2},
        {"Misc", "Misc", 3},
        {"Player", "Player", 4},
        {"Pets", "Pets", 5},
        {"Webhook", "Webhook", 6},
        {"Settings", "Settings", 7}
    }

    local function createNavButton(name, text, layoutOrder)
        local button = Instance.new("TextButton")
        button.Name = name .. "NavButton"
        button.Parent = SidebarFrame
        button.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
        button.BorderSizePixel = 0
        button.Size = UDim2.new(1, 0, 0, 40)
        button.Font = Enum.Font.GothamSemibold
        button.Text = text
        button.TextColor3 = Color3.fromRGB(200, 200, 200)
        button.TextSize = 16
        button.TextXAlignment = Enum.TextXAlignment.Left
        button.TextOffset = Vector2.new(10, 0)
        button.LayoutOrder = layoutOrder

        local UICornerButton = Instance.new("UICorner")
        UICornerButton.Parent = button
        UICornerButton.CornerRadius = UDim.new(0, 5)

        -- Hover effect
        button.MouseEnter:Connect(function()
            button.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
        end)
        button.MouseLeave:Connect(function()
            button.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
        end)

        return button
    end

    for _, item in ipairs(navItems) do
        createNavButton(item[1], item[2], item[3])
    end

    -- Content Frame (where the actual content changes)
    local ContentFrame = Instance.new("Frame")
    ContentFrame.Name = "ContentFrame"
    ContentFrame.Parent = MainContentArea
    ContentFrame.BackgroundColor3 = Color3.fromRGB(35, 35, 35) -- Slightly different from sidebar
    ContentFrame.BorderSizePixel = 0
    ContentFrame.Size = UDim2.new(1, -150, 1, 0) -- Fills remaining space
    
    local UIListLayoutContent = Instance.new("UIListLayout")
    UIListLayoutContent.Parent = ContentFrame
    UIListLayoutContent.FillDirection = Enum.FillDirection.Vertical
    UIListLayoutContent.HorizontalAlignment = Enum.HorizontalAlignment.Left
    UIListLayoutContent.VerticalAlignment = Enum.VerticalAlignment.Top
    UIListLayoutContent.Padding = UDim.new(0, 10)
    UIListLayoutContent.SortOrder = Enum.SortOrder.LayoutOrder

    local UIPaddingContent = Instance.new("UIPadding")
    UIPaddingContent.Parent = ContentFrame
    UIPaddingContent.PaddingLeft = UDim.new(0, 10)
    UIPaddingContent.PaddingRight = UDim.new(0, 10)
    UIPaddingContent.PaddingTop = UDim.new(0, 10)
    UIPaddingContent.PaddingBottom = UDim.new(0, 10)

    -- Main Section Content (Example - as seen in image)
    local MainSection = Instance.new("Frame")
    MainSection.Name = "MainSection"
    MainSection.Parent = ContentFrame
    MainSection.BackgroundTransparency = 1
    MainSection.Size = UDim2.new(1, 0, 0, 400) -- Example size, adjust as needed
    MainSection.AutomaticSize = Enum.AutomaticSize.Y -- Allow content to dictate height
    MainSection.LayoutOrder = 1

    local UIListLayoutMainSection = Instance.new("UIListLayout")
    UIListLayoutMainSection.Parent = MainSection
    UIListLayoutMainSection.FillDirection = Enum.FillDirection.Vertical
    UIListLayoutMainSection.HorizontalAlignment = Enum.HorizontalAlignment.Left
    UIListLayoutMainSection.VerticalAlignment = Enum.VerticalAlignment.Top
    UIListLayoutMainSection.Padding = UDim.new(0, 10)

    -- Section Header "Main"
    local SectionHeaderMain = Instance.new("TextLabel")
    SectionHeaderMain.Name = "SectionHeader"
    SectionHeaderMain.Parent = MainSection
    SectionHeaderMain.BackgroundTransparency = 1
    SectionHeaderMain.Size = UDim2.new(1, 0, 0, 25)
    SectionHeaderMain.Font = Enum.Font.GothamBold
    SectionHeaderMain.Text = "Main"
    SectionHeaderMain.TextColor3 = Color3.fromRGB(255, 255, 255)
    SectionHeaderMain.TextSize = 22
    SectionHeaderMain.TextXAlignment = Enum.TextXAlignment.Left
    SectionHeaderMain.LayoutOrder = 1

    -- Change Log Section
    local ChangeLogFrame = Instance.new("Frame")
    ChangeLogFrame.Name = "ChangeLogFrame"
    ChangeLogFrame.Parent = MainSection
    ChangeLogFrame.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
    ChangeLogFrame.BorderSizePixel = 0
    ChangeLogFrame.Size = UDim2.new(1, 0, 0, 150) -- Example size
    ChangeLogFrame.AutomaticSize = Enum.AutomaticSize.Y
    ChangeLogFrame.LayoutOrder = 2

    local UICornerChangeLog = Instance.new("UICorner")
    UICornerChangeLog.Parent = ChangeLogFrame
    UICornerChangeLog.CornerRadius = UDim.new(0, 8)

    local UIListLayoutChangeLog = Instance.new("UIListLayout")
    UIListLayoutChangeLog.Parent = ChangeLogFrame
    UIListLayoutChangeLog.FillDirection = Enum.FillDirection.Vertical
    UIListLayoutChangeLog.HorizontalAlignment = Enum.HorizontalAlignment.Left
    UIListLayoutChangeLog.VerticalAlignment = Enum.VerticalAlignment.Top
    UIListLayoutChangeLog.Padding = UDim.new(0, 5)

    local UIPaddingChangeLog = Instance.new("UIPadding")
    UIPaddingChangeLog.Parent = ChangeLogFrame
    UIPaddingChangeLog.PaddingLeft = UDim.new(0, 10)
    UIPaddingChangeLog.PaddingRight = UDim.new(0, 10)
    UIPaddingChangeLog.PaddingTop = UDim.new(0, 10)
    UIPaddingChangeLog.PaddingBottom = UDim.new(0, 10)

    local ChangeLogTitle = Instance.new("TextLabel")
    ChangeLogTitle.Name = "ChangeLogTitle"
    ChangeLogTitle.Parent = ChangeLogFrame
    ChangeLogTitle.BackgroundTransparency = 1
    ChangeLogTitle.Size = UDim2.new(1, 0, 0, 20)
    ChangeLogTitle.Font = Enum.Font.GothamSemibold
    ChangeLogTitle.Text = "Change Log:"
    ChangeLogTitle.TextColor3 = Color3.fromRGB(255, 255, 255)
    ChangeLogTitle.TextSize = 16
    ChangeLogTitle.TextXAlignment = Enum.TextXAlignment.Left

    local DiscordLink = Instance.new("TextButton")
    DiscordLink.Name = "DiscordLink"
    DiscordLink.Parent = ChangeLogFrame
    DiscordLink.BackgroundTransparency = 1
    DiscordLink.Size = UDim2.new(1, 0, 0, 20)
    DiscordLink.Font = Enum.Font.Gotham
    DiscordLink.Text = "Copy Discord Invite: https://discord.gg/92BUwMZHet"
    DiscordLink.TextColor3 = Color3.fromRGB(100, 150, 255) -- Blue for link
    DiscordLink.TextSize = 14
    DiscordLink.TextXAlignment = Enum.TextXAlignment.Left
    DiscordLink.TextWrapped = true
    DiscordLink.MouseButton1Click:Connect(function() setclipboard("https://discord.gg/92BUwMZHet") end)

    local UpdateLog = Instance.new("TextLabel")
    UpdateLog.Name = "UpdateLog"
    UpdateLog.Parent = ChangeLogFrame
    UpdateLog.BackgroundTransparency = 1
    UpdateLog.Size = UDim2.new(1, 0, 0, 60) -- Adjust height as needed
    UpdateLog.Font = Enum.Font.Gotham
    UpdateLog.Text = "Update Log:\nAdded summer plants to destroy tab\nFixed Auto Favourite not working\nImproved Auto Harvest"
    UpdateLog.TextColor3 = Color3.fromRGB(200, 200, 200)
    UpdateLog.TextSize = 14
    UpdateLog.TextXAlignment = Enum.TextXAlignment.Left
    UpdateLog.TextWrapped = true

    -- Current Server Version
    local VersionLabel = Instance.new("TextLabel")
    VersionLabel.Name = "VersionLabel"
    VersionLabel.Parent = MainSection
    VersionLabel.BackgroundTransparency = 1
    VersionLabel.Size = UDim2.new(1, 0, 0, 20)
    VersionLabel.Font = Enum.Font.Gotham
    VersionLabel.Text = "Current Server Version: 141B"
    VersionLabel.TextColor3 = Color3.fromRGB(200, 200, 200)
    VersionLabel.TextSize = 14
    VersionLabel.TextXAlignment = Enum.TextXAlignment.Left
    VersionLabel.LayoutOrder = 3

    -- Planting Section
    local PlantingFrame = Instance.new("Frame")
    PlantingFrame.Name = "PlantingFrame"
    PlantingFrame.Parent = MainSection
    PlantingFrame.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
    PlantingFrame.BorderSizePixel = 0
    PlantingFrame.Size = UDim2.new(1, 0, 0, 80) -- Example size
    PlantingFrame.AutomaticSize = Enum.AutomaticSize.Y
    PlantingFrame.LayoutOrder = 4

    local UICornerPlanting = Instance.new("UICorner")
    UICornerPlanting.Parent = PlantingFrame
    UICornerPlanting.CornerRadius = UDim.new(0, 8)

    local UIListLayoutPlanting = Instance.new("UIListLayout")
    UIListLayoutPlanting.Parent = PlantingFrame
    UIListLayoutPlanting.FillDirection = Enum.FillDirection.Vertical
    UIListLayoutPlanting.HorizontalAlignment = Enum.HorizontalAlignment.Left
    UIListLayoutPlanting.VerticalAlignment = Enum.VerticalAlignment.Top
    UIListLayoutPlanting.Padding = UDim.new(0, 5)

    local UIPaddingPlanting = Instance.new("UIPadding")
    UIPaddingPlanting.Parent = PlantingFrame
    UIPaddingPlanting.PaddingLeft = UDim.new(0, 10)
    UIPaddingPlanting.PaddingRight = UDim.new(0, 10)
    UIPaddingPlanting.PaddingTop = UDim.new(0, 10)
    UIPaddingPlanting.PaddingBottom = UDim.new(0, 10)

    local PlantingTitle = Instance.new("TextLabel")
    PlantingTitle.Name = "PlantingTitle"
    PlantingTitle.Parent = PlantingFrame
    PlantingTitle.BackgroundTransparency = 1
    PlantingTitle.Size = UDim2.new(1, 0, 0, 20)
    PlantingTitle.Font = Enum.Font.GothamSemibold
    PlantingTitle.Text = "Planting"
    PlantingTitle.TextColor3 = Color3.fromRGB(255, 255, 255)
    PlantingTitle.TextSize = 16
    PlantingTitle.TextXAlignment = Enum.TextXAlignment.Left

    local SelectSeedsLabel = Instance.new("TextLabel")
    SelectSeedsLabel.Name = "SelectSeedsLabel"
    SelectSeedsLabel.Parent = PlantingFrame
    SelectSeedsLabel.BackgroundTransparency = 1
    SelectSeedsLabel.Size = UDim2.new(0.5, 0, 0, 20)
    SelectSeedsLabel.Font = Enum.Font.Gotham
    SelectSeedsLabel.Text = "Select Seeds to plant"
    SelectSeedsLabel.TextColor3 = Color3.fromRGB(200, 200, 200)
    SelectSeedsLabel.TextSize = 14
    SelectSeedsLabel.TextXAlignment = Enum.TextXAlignment.Left

    local SeedDropdown = Instance.new("TextButton") -- Simple TextButton as a dropdown placeholder
    SeedDropdown.Name = "SeedDropdown"
    SeedDropdown.Parent = PlantingFrame
    SeedDropdown.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
    SeedDropdown.BorderSizePixel = 0
    SeedDropdown.Size = UDim2.new(0.4, 0, 0, 25) -- Smaller width
    SeedDropdown.Position = UDim2.new(0.55, 0, 0, 0) -- Position next to label (requires UILayout to be set to horizontal for this row)
    SeedDropdown.Font = Enum.Font.Gotham
    SeedDropdown.Text = "All"
    SeedDropdown.TextColor3 = Color3.fromRGB(255, 255, 255)
    SeedDropdown.TextSize = 14
    
    local UICornerDropdown = Instance.new("UICorner")
    UICornerDropdown.Parent = SeedDropdown
    UICornerDropdown.CornerRadius = UDim.new(0, 5)

    -- To align "Select Seeds to plant" and "All" horizontally,
    -- you'd typically need a UIListLayout or UIGridLayout for that specific row.
    -- For simplicity in this example, they are stacked vertically by default.
    -- A more advanced dropdown would involve creating a separate frame with options.

    return {
        ScreenGui = ScreenGui,
        MainFrame = MainFrame,
        TitleBar = TitleBar, -- For dragging
        TitleLabel = TitleLabel, -- For dragging
        CloseButton = CloseButton,
        SidebarFrame = SidebarFrame,
        ContentFrame = ContentFrame,
        MainSection = MainSection,
        ChangeLogFrame = ChangeLogFrame,
        PlantingFrame = PlantingFrame,
        -- You would return other specific elements if you need to interact with them
    }
end

-- Initialize UI and connect events
local function initBlackhubUI()
    local ui = createBlackhubUI()
    local MainFrame = ui.MainFrame
    local TitleBar = ui.TitleBar -- Use TitleBar for dragging
    
    -- Custom Dragging Logic for MainFrame (using Heartbeat for continuous updates)
    TitleBar.InputBegan:Connect(function(input) -- Connect InputBegan to TitleBar
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = true
            -- Calculate the offset from the mouse position to the frame's top-left corner
            dragStartOffset = input.Position - Vector2.new(MainFrame.Position.X.Offset, MainFrame.Position.Y.Offset)

            -- Disconnect any existing connection to prevent multiple connections
            if dragConnection then
                dragConnection:Disconnect()
            end

            -- Connect to Heartbeat for continuous dragging updates
            dragConnection = RunService.Heartbeat:Connect(function()
                if dragging then -- Ensure dragging is still active inside the loop
                    local currentMousePosition = UserInputService:GetMouseLocation()
                    local newX = currentMousePosition.X - dragStartOffset.X
                    local newY = currentMousePosition.Y - dragStartOffset.Y
                    MainFrame.Position = UDim2.new(0, newX, 0, newY)
                end
            end)
        end
    end)

    -- Connect InputEnded to UserInputService to catch mouse release anywhere on the screen
    UserInputService.InputEnded:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = false
            if dragConnection then
                dragConnection:Disconnect() -- Disconnect Heartbeat when dragging stops
                dragConnection = nil
            end
        end
    end)
    
    return ui
end

-- Start the UI
initBlackhubUI()
